# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from wgtwo.calling.v0 import calling_pb2 as wgtwo_dot_calling_dot_v0_dot_calling__pb2


class CallingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartCall = channel.stream_stream(
                '/wgtwo.calling.v0.CallingService/StartCall',
                request_serializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.StartCallRequest.SerializeToString,
                response_deserializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.StartCallResponse.FromString,
                )
        self.TransferCall = channel.unary_unary(
                '/wgtwo.calling.v0.CallingService/TransferCall',
                request_serializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.TransferCallRequest.SerializeToString,
                response_deserializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.TransferCallResponse.FromString,
                )
        self.SendDtmf = channel.unary_unary(
                '/wgtwo.calling.v0.CallingService/SendDtmf',
                request_serializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.SendDtmfRequest.SerializeToString,
                response_deserializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.SendDtmfResponse.FromString,
                )
        self.HangupCall = channel.unary_unary(
                '/wgtwo.calling.v0.CallingService/HangupCall',
                request_serializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.HangupCallRequest.SerializeToString,
                response_deserializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.HangupCallResponse.FromString,
                )
        self.GetTurnServers = channel.unary_unary(
                '/wgtwo.calling.v0.CallingService/GetTurnServers',
                request_serializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.GetTurnServersRequest.SerializeToString,
                response_deserializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.GetTurnServersResponse.FromString,
                )
        self.SetIceCandidate = channel.unary_unary(
                '/wgtwo.calling.v0.CallingService/SetIceCandidate',
                request_serializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.SendIceCandidateRequest.SerializeToString,
                response_deserializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.SendIceCandidateResponse.FromString,
                )
        self.GetIceCandidate = channel.unary_stream(
                '/wgtwo.calling.v0.CallingService/GetIceCandidate',
                request_serializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.GetIceCandidateRequest.SerializeToString,
                response_deserializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.GetIceCandidateResponse.FromString,
                )


class CallingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StartCall(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferCall(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendDtmf(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HangupCall(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTurnServers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetIceCandidate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIceCandidate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CallingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartCall': grpc.stream_stream_rpc_method_handler(
                    servicer.StartCall,
                    request_deserializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.StartCallRequest.FromString,
                    response_serializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.StartCallResponse.SerializeToString,
            ),
            'TransferCall': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferCall,
                    request_deserializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.TransferCallRequest.FromString,
                    response_serializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.TransferCallResponse.SerializeToString,
            ),
            'SendDtmf': grpc.unary_unary_rpc_method_handler(
                    servicer.SendDtmf,
                    request_deserializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.SendDtmfRequest.FromString,
                    response_serializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.SendDtmfResponse.SerializeToString,
            ),
            'HangupCall': grpc.unary_unary_rpc_method_handler(
                    servicer.HangupCall,
                    request_deserializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.HangupCallRequest.FromString,
                    response_serializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.HangupCallResponse.SerializeToString,
            ),
            'GetTurnServers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTurnServers,
                    request_deserializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.GetTurnServersRequest.FromString,
                    response_serializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.GetTurnServersResponse.SerializeToString,
            ),
            'SetIceCandidate': grpc.unary_unary_rpc_method_handler(
                    servicer.SetIceCandidate,
                    request_deserializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.SendIceCandidateRequest.FromString,
                    response_serializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.SendIceCandidateResponse.SerializeToString,
            ),
            'GetIceCandidate': grpc.unary_stream_rpc_method_handler(
                    servicer.GetIceCandidate,
                    request_deserializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.GetIceCandidateRequest.FromString,
                    response_serializer=wgtwo_dot_calling_dot_v0_dot_calling__pb2.GetIceCandidateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'wgtwo.calling.v0.CallingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CallingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StartCall(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/wgtwo.calling.v0.CallingService/StartCall',
            wgtwo_dot_calling_dot_v0_dot_calling__pb2.StartCallRequest.SerializeToString,
            wgtwo_dot_calling_dot_v0_dot_calling__pb2.StartCallResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransferCall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wgtwo.calling.v0.CallingService/TransferCall',
            wgtwo_dot_calling_dot_v0_dot_calling__pb2.TransferCallRequest.SerializeToString,
            wgtwo_dot_calling_dot_v0_dot_calling__pb2.TransferCallResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendDtmf(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wgtwo.calling.v0.CallingService/SendDtmf',
            wgtwo_dot_calling_dot_v0_dot_calling__pb2.SendDtmfRequest.SerializeToString,
            wgtwo_dot_calling_dot_v0_dot_calling__pb2.SendDtmfResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HangupCall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wgtwo.calling.v0.CallingService/HangupCall',
            wgtwo_dot_calling_dot_v0_dot_calling__pb2.HangupCallRequest.SerializeToString,
            wgtwo_dot_calling_dot_v0_dot_calling__pb2.HangupCallResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTurnServers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wgtwo.calling.v0.CallingService/GetTurnServers',
            wgtwo_dot_calling_dot_v0_dot_calling__pb2.GetTurnServersRequest.SerializeToString,
            wgtwo_dot_calling_dot_v0_dot_calling__pb2.GetTurnServersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetIceCandidate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wgtwo.calling.v0.CallingService/SetIceCandidate',
            wgtwo_dot_calling_dot_v0_dot_calling__pb2.SendIceCandidateRequest.SerializeToString,
            wgtwo_dot_calling_dot_v0_dot_calling__pb2.SendIceCandidateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIceCandidate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/wgtwo.calling.v0.CallingService/GetIceCandidate',
            wgtwo_dot_calling_dot_v0_dot_calling__pb2.GetIceCandidateRequest.SerializeToString,
            wgtwo_dot_calling_dot_v0_dot_calling__pb2.GetIceCandidateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
