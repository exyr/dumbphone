# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from wgtwo.sms.v0 import sms_pb2 as wgtwo_dot_sms_dot_v0_dot_sms__pb2


class SmsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendTextToSubscriber = channel.unary_unary(
                '/wgtwo.sms.v0.SmsService/SendTextToSubscriber',
                request_serializer=wgtwo_dot_sms_dot_v0_dot_sms__pb2.SendTextToSubscriberRequest.SerializeToString,
                response_deserializer=wgtwo_dot_sms_dot_v0_dot_sms__pb2.SendResponse.FromString,
                )
        self.SendTextFromSubscriber = channel.unary_unary(
                '/wgtwo.sms.v0.SmsService/SendTextFromSubscriber',
                request_serializer=wgtwo_dot_sms_dot_v0_dot_sms__pb2.SendTextFromSubscriberRequest.SerializeToString,
                response_deserializer=wgtwo_dot_sms_dot_v0_dot_sms__pb2.SendResponse.FromString,
                )
        self.SendBinaryToSubscriber = channel.unary_unary(
                '/wgtwo.sms.v0.SmsService/SendBinaryToSubscriber',
                request_serializer=wgtwo_dot_sms_dot_v0_dot_sms__pb2.SendBinaryToSubscriberRequest.SerializeToString,
                response_deserializer=wgtwo_dot_sms_dot_v0_dot_sms__pb2.SendResponse.FromString,
                )
        self.ReceiveText = channel.unary_stream(
                '/wgtwo.sms.v0.SmsService/ReceiveText',
                request_serializer=wgtwo_dot_sms_dot_v0_dot_sms__pb2.ReceiveTextRequest.SerializeToString,
                response_deserializer=wgtwo_dot_sms_dot_v0_dot_sms__pb2.Text.FromString,
                )
        self.Ack = channel.unary_unary(
                '/wgtwo.sms.v0.SmsService/Ack',
                request_serializer=wgtwo_dot_sms_dot_v0_dot_sms__pb2.AckRequest.SerializeToString,
                response_deserializer=wgtwo_dot_sms_dot_v0_dot_sms__pb2.AckResponse.FromString,
                )


class SmsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendTextToSubscriber(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendTextFromSubscriber(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendBinaryToSubscriber(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReceiveText(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ack(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SmsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendTextToSubscriber': grpc.unary_unary_rpc_method_handler(
                    servicer.SendTextToSubscriber,
                    request_deserializer=wgtwo_dot_sms_dot_v0_dot_sms__pb2.SendTextToSubscriberRequest.FromString,
                    response_serializer=wgtwo_dot_sms_dot_v0_dot_sms__pb2.SendResponse.SerializeToString,
            ),
            'SendTextFromSubscriber': grpc.unary_unary_rpc_method_handler(
                    servicer.SendTextFromSubscriber,
                    request_deserializer=wgtwo_dot_sms_dot_v0_dot_sms__pb2.SendTextFromSubscriberRequest.FromString,
                    response_serializer=wgtwo_dot_sms_dot_v0_dot_sms__pb2.SendResponse.SerializeToString,
            ),
            'SendBinaryToSubscriber': grpc.unary_unary_rpc_method_handler(
                    servicer.SendBinaryToSubscriber,
                    request_deserializer=wgtwo_dot_sms_dot_v0_dot_sms__pb2.SendBinaryToSubscriberRequest.FromString,
                    response_serializer=wgtwo_dot_sms_dot_v0_dot_sms__pb2.SendResponse.SerializeToString,
            ),
            'ReceiveText': grpc.unary_stream_rpc_method_handler(
                    servicer.ReceiveText,
                    request_deserializer=wgtwo_dot_sms_dot_v0_dot_sms__pb2.ReceiveTextRequest.FromString,
                    response_serializer=wgtwo_dot_sms_dot_v0_dot_sms__pb2.Text.SerializeToString,
            ),
            'Ack': grpc.unary_unary_rpc_method_handler(
                    servicer.Ack,
                    request_deserializer=wgtwo_dot_sms_dot_v0_dot_sms__pb2.AckRequest.FromString,
                    response_serializer=wgtwo_dot_sms_dot_v0_dot_sms__pb2.AckResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'wgtwo.sms.v0.SmsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SmsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendTextToSubscriber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wgtwo.sms.v0.SmsService/SendTextToSubscriber',
            wgtwo_dot_sms_dot_v0_dot_sms__pb2.SendTextToSubscriberRequest.SerializeToString,
            wgtwo_dot_sms_dot_v0_dot_sms__pb2.SendResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendTextFromSubscriber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wgtwo.sms.v0.SmsService/SendTextFromSubscriber',
            wgtwo_dot_sms_dot_v0_dot_sms__pb2.SendTextFromSubscriberRequest.SerializeToString,
            wgtwo_dot_sms_dot_v0_dot_sms__pb2.SendResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendBinaryToSubscriber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wgtwo.sms.v0.SmsService/SendBinaryToSubscriber',
            wgtwo_dot_sms_dot_v0_dot_sms__pb2.SendBinaryToSubscriberRequest.SerializeToString,
            wgtwo_dot_sms_dot_v0_dot_sms__pb2.SendResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReceiveText(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/wgtwo.sms.v0.SmsService/ReceiveText',
            wgtwo_dot_sms_dot_v0_dot_sms__pb2.ReceiveTextRequest.SerializeToString,
            wgtwo_dot_sms_dot_v0_dot_sms__pb2.Text.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Ack(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wgtwo.sms.v0.SmsService/Ack',
            wgtwo_dot_sms_dot_v0_dot_sms__pb2.AckRequest.SerializeToString,
            wgtwo_dot_sms_dot_v0_dot_sms__pb2.AckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
